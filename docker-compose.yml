services:
  php:
    build: ./docker/php
    env_file:
      - .env
    container_name: php
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - ./app:/var/www/enviros:cached
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - "userroot:/root"
      - $ENVIROS_STORAGE:/storage
    working_dir: /var/www/enviros
    networks:
      - backend
      - instance
    depends_on:
      - mariadb
      - redis
    environment:
      APP_ENV: ${APP_ENV}
      MYSQL_SERVER: ${DB_HOST}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      XDEBUG_CONFIG: "idekey=PHPSTORM"
      PHP_IDE_CONFIG: "serverName=localhost"
      REDIS_DNS: redis
      SENTRY_DSN: "http://5fef1e68a8a24f5b8cfaa6cf8d8715b6@glitchtip:8000/1"

  command-proxy:
    extra_hosts:
      - host.docker.internal:host-gateway
    build: app/docker/cmdproxy
    container_name: command-proxy
    restart: unless-stopped
    volumes:
      - /home/cmdproxy/.ssh:/root/.ssh  # Persist SSH keys
    environment:
      - HOST_USER=cmdproxy
      - HOST_IP=host.docker.internal
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./app:/var/www/enviros
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./var/log/php-xdebug.log:/var/www/log/xdebug.log
    ports:
      - "${NGINX_PORT}:80"
    networks:
      - backend
      - instance
    depends_on:
      - php
    environment:
      XDEBUG_ENABLED: 1
      XDEBUG_REMOTE_AUTOSTART: 1
      XDEBUG_MAXNESTING_LEVEL: 1000
      XDEBUG_REMOTE_CONNECT_BACK: 1
      XDEBUG_REMOTE_HOST: host.docker.internal
      XDEBUG_CLIENT_PORT: 9008
      APP_ENV: ${APP_ENV}
      PHP_IDE_CONFIG: serverName=localhost

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - instance

  redis:
    image: redis:6.2-alpine
    restart: always
    env_file:
      - .env
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data
    networks:
      - instance

volumes:
  userroot:
  cache:
    driver: local
  db_data:

networks:
  instance:
  backend:
    external: true
